name: Deploy CaptiOCR Website

on:
  push:
    branches: [main]
    paths:
      - "web/**"
      - ".github/workflows/**"
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./web

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - name: Setup Node.js 🟢
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: './web/package-lock.json'

      - name: Install dependencies 📦
        run: |
          npm ci --prefer-offline --no-audit

      - name: Build website 🏗️
        run: |
          npm run build
        env:
          CI: false
          DISABLE_ESLINT_PLUGIN: true
          GENERATE_SOURCEMAP: false
          PUBLIC_URL: "https://www.captiocr.com"

      - name: Copy static files 📋
        run: |
          # Copy robots.txt and sitemap.xml to build directory
          cp public/robots.txt build/
          cp public/sitemap.xml build/
          # Copy CNAME if exists
          if [ -f "../CNAME" ]; then
            cp ../CNAME build/
          fi

      - name: Optimize build 🚀
        run: |
          # Remove source maps in production
          find build -name "*.map" -delete
          # List build contents for debugging
          echo "Build directory contents:"
          ls -la build/

      - name: Upload artifact 📤
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./web/build

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Deploy to GitHub Pages 🚀
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Post-deploy verification ✅
        run: |
          echo "Deployment completed successfully!"
          echo "Site URL: ${{ steps.deployment.outputs.page_url }}"